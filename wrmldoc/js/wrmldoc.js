// Generated by CoffeeScript 1.6.3
(function(Backbone) {
  var methods, _sync;
  _sync = Backbone.sync;
  Backbone.sync = function(method, entity, options) {
    var sync;
    if (options == null) {
      options = {};
    }
    _.defaults(options, {
      beforeSend: _.bind(methods.beforeSend, entity),
      complete: _.bind(methods.complete, entity)
    });
    sync = _sync(method, entity, options);
    if (!entity._fetch && method === "read") {
      return entity._fetch = sync;
    }
  };
  return methods = {
    beforeSend: function() {
      return this.trigger("sync:start", this);
    },
    complete: function() {
      return this.trigger("sync:stop", this);
    }
  };
})(Backbone);
// Generated by CoffeeScript 1.6.3
Array.prototype.insertAt = function(index, item) {
  this.splice(index, 0, item);
  return this;
};
// Generated by CoffeeScript 1.6.3
(function($) {
  return $.fn.toggleWrapper = function(obj, init) {
    var $height, $offset, $width;
    if (obj == null) {
      obj = {};
    }
    if (init == null) {
      init = true;
    }
    _.defaults(obj, {
      className: "",
      backgroundColor: this.css("backgroundColor") !== "transparent" ? this.css("backgroundColor") : "white",
      zIndex: this.css("zIndex") === "auto" || 0 ? 1000 : Number(this.css("zIndex"))
    });
    $offset = this.offset();
    $width = this.outerWidth(false);
    $height = this.outerHeight(false);
    if (init) {
      return $("<div>").appendTo("body").addClass(obj.className).attr("data-wrapper", true).css({
        width: $width,
        height: $height,
        top: $offset.top,
        left: $offset.left,
        position: "absolute",
        zIndex: obj.zIndex + 1,
        backgroundColor: obj.backgroundColor
      });
    } else {
      return $("[data-wrapper]").remove();
    }
  };
})($);
// Generated by CoffeeScript 1.6.3
(function(Backbone) {
  return _.extend(Backbone.Marionette.Application.prototype, {
    navigate: function(route, options) {
      if (options == null) {
        options = {};
      }
      return Backbone.history.navigate(route, options);
    },
    getCurrentRoute: function() {
      var frag;
      frag = Backbone.history.fragment;
      if (_.isEmpty(frag)) {
        return null;
      } else {
        return frag;
      }
    },
    startHistory: function() {
      if (Backbone.history) {
        return Backbone.history.start();
      }
    },
    register: function(instance, id) {
      if (this._registry == null) {
        this._registry = {};
      }
      return this._registry[id] = instance;
    },
    unregister: function(instance, id) {
      return delete this._registry[id];
    },
    resetRegistry: function() {
      var controller, key, msg, oldCount, _ref;
      oldCount = this.getRegistrySize();
      _ref = this._registry;
      for (key in _ref) {
        controller = _ref[key];
        controller.region.close();
      }
      msg = "There were " + oldCount + " controllers in the registry, there are now " + (this.getRegistrySize());
      if (this.getRegistrySize() > 0) {
        return console.warn(msg, this._registry);
      } else {
        return console.log(msg);
      }
    },
    getRegistrySize: function() {
      return _.size(this._registry);
    }
  });
})(Backbone);
// Generated by CoffeeScript 1.6.3
(function(Marionette) {
  return _.extend(Marionette.Renderer, {
    lookups: ["apps/", "components/"],
    render: function(template, data) {
      var ecoTemplate;
      ecoTemplate = this.getEcoTemplate(template);
      if (!ecoTemplate) {
        throw "Template " + template + " not found!";
      }
      return ecoTemplate(data);
    },
    getEcoTemplate: function(template) {
      var ecoTemplate, lookup, path, _i, _j, _len, _len1, _ref, _ref1;
      _ref = [template, template.split("/").insertAt(-1, "templates").join("/")];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        path = _ref[_i];
        _ref1 = this.lookups;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          lookup = _ref1[_j];
          ecoTemplate = ecoTemplates[lookup + path];
          if (ecoTemplate) {
            return ecoTemplate;
          }
        }
      }
    }
  });
})(Marionette);
// Generated by CoffeeScript 1.6.3
this.Wrmldoc = (function(Backbone, Marionette) {
  var App;
  App = new Marionette.Application;
  App.addRegions({
    headerRegion: "#header-region",
    mainRegion: "#main-region",
    footerRegion: "#footer-region"
  });
  App.addInitializer(function() {
    App.module("HeaderApp").start(App.wrmlData);
    App.module("ModelApp").start(App.wrmlData);
    return App.module("FooterApp").start(App.wrmlData);
  });
  App.on("initialize:before", function(wrmlData) {
    return App.wrmlData = new App.Entities.Model(wrmlData);
  });
  App.on("initialize:after", function() {
    this.startHistory();
    if (!this.getCurrentRoute()) {
      return this.navigate(this.rootRoute, {
        trigger: true
      });
    }
  });
  App.getWrmlData = function() {
    return App.wrmlData;
  };
  App.reqres.setHandler("default:region", function() {
    return App.mainRegion;
  });
  App.reqres.setHandler("wrml:data", function() {
    return App.getWrmlData();
  });
  App.commands.setHandler("register:instance", function(instance, id) {
    return App.register(instance, id);
  });
  App.commands.setHandler("unregister:instance", function(instance, id) {
    return App.unregister(instance, id);
  });
  window.wrmldoc = App;
  return App;
})(Backbone, Marionette);
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Views", function(Views, App, Backbone, Marionette, $, _) {
  var _ref;
  return Views.CollectionView = (function(_super) {
    __extends(CollectionView, _super);

    function CollectionView() {
      _ref = CollectionView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CollectionView.prototype.itemViewEventPrefix = "childview";

    return CollectionView;

  })(Marionette.CollectionView);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Views", function(Views, App, Backbone, Marionette, $, _) {
  var _ref;
  return Views.CompositeView = (function(_super) {
    __extends(CompositeView, _super);

    function CompositeView() {
      _ref = CompositeView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CompositeView.prototype.itemViewEventPrefix = "childview";

    return CompositeView;

  })(Marionette.CompositeView);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Views", function(Views, App, Backbone, Marionette, $, _) {
  var _ref;
  return Views.ItemView = (function(_super) {
    __extends(ItemView, _super);

    function ItemView() {
      _ref = ItemView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return ItemView;

  })(Marionette.ItemView);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Views", function(Views, App, Backbone, Marionette, $, _) {
  var _ref;
  return Views.Layout = (function(_super) {
    __extends(Layout, _super);

    function Layout() {
      _ref = Layout.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Layout;

  })(Marionette.Layout);
});
// Generated by CoffeeScript 1.6.3
var __slice = [].slice;

this.Wrmldoc.module("Views", function(Views, App, Backbone, Marionette, $, _) {
  var _remove;
  _remove = Marionette.View.prototype.remove;
  return _.extend(Marionette.View.prototype, {
    addOpacityWrapper: function(init) {
      if (init == null) {
        init = true;
      }
      return this.$el.toggleWrapper({
        className: "opacity"
      }, init);
    },
    setInstancePropertiesFor: function() {
      var args, key, val, _ref, _results;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      _ref = _.pick.apply(_, [this.options].concat(__slice.call(args)));
      _results = [];
      for (key in _ref) {
        val = _ref[key];
        _results.push(this[key] = val);
      }
      return _results;
    },
    remove: function() {
      var args, wrapper, _ref,
        _this = this;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      console.log("removing", this);
      if ((_ref = this.model) != null ? typeof _ref.isDestroyed === "function" ? _ref.isDestroyed() : void 0 : void 0) {
        wrapper = this.$el.toggleWrapper({
          className: "opacity",
          backgroundColor: "red"
        });
        wrapper.fadeOut(400, function() {
          return $(this).remove();
        });
        return this.$el.fadeOut(400, function() {
          return _remove.apply(_this, args);
        });
      } else {
        return _remove.apply(this, args);
      }
    },
    templateHelpers: function() {
      return {
        linkTo: function(name, url, options) {
          if (options == null) {
            options = {};
          }
          _.defaults(options, {
            external: false
          });
          if (!options.external) {
            url = "#" + url;
          }
          return "<a href='" + url + "'>" + (this.escape(name)) + "</a>";
        }
      };
    }
  });
});
// Generated by CoffeeScript 1.6.3
this.Wrmldoc.module("Entities", function(Entities, App, Backbone, Marionette, $, _) {
  return App.commands.setHandler("when:fetched", function(entities, callback) {
    var xhrs;
    xhrs = _.chain([entities]).flatten().pluck("_fetch").value();
    return $.when.apply($, xhrs).done(function() {
      return callback();
    });
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Entities", function(Entities, App, Backbone, Marionette, $, _) {
  var _ref;
  return Entities.Collection = (function(_super) {
    __extends(Collection, _super);

    function Collection() {
      _ref = Collection.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Collection;

  })(Backbone.Collection);
});
// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Entities", function(Entities, App, Backbone, Marionette, $, _) {
  var _ref;
  return Entities.Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      this.saveError = __bind(this.saveError, this);
      this.saveSuccess = __bind(this.saveSuccess, this);
      _ref = Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Model.prototype.destroy = function(options) {
      if (options == null) {
        options = {};
      }
      _.defaults(options, {
        wait: true
      });
      this.set({
        _destroy: true
      });
      return Model.__super__.destroy.call(this, options);
    };

    Model.prototype.isDestroyed = function() {
      return this.get("_destroy");
    };

    Model.prototype.save = function(data, options) {
      var isNew;
      if (options == null) {
        options = {};
      }
      isNew = this.isNew();
      _.defaults(options, {
        wait: true,
        success: _.bind(this.saveSuccess, this, isNew, options.collection),
        error: _.bind(this.saveError, this)
      });
      this.unset("_errors");
      return Model.__super__.save.call(this, data, options);
    };

    Model.prototype.saveSuccess = function(isNew, collection) {
      if (isNew) {
        if (collection) {
          collection.add(this);
        }
        if (collection) {
          collection.trigger("model:created", this);
        }
        return this.trigger("created", this);
      } else {
        if (collection == null) {
          collection = this.collection;
        }
        if (collection) {
          collection.trigger("model:updated", this);
        }
        return this.trigger("updated", this);
      }
    };

    Model.prototype.saveError = function(model, xhr, options) {
      var _ref1;
      if (!(xhr.status === 500 || xhr.status === 404)) {
        return this.set({
          _errors: (_ref1 = $.parseJSON(xhr.responseText)) != null ? _ref1.errors : void 0
        });
      }
    };

    return Model;

  })(Backbone.Model);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Entities", function(Entities, App, Backbone, Marionette, $, _) {
  var API, _ref, _ref1;
  Entities.Button = (function(_super) {
    __extends(Button, _super);

    function Button() {
      _ref = Button.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Button.prototype.defaults = {
      buttonType: "button"
    };

    return Button;

  })(Entities.Model);
  Entities.ButtonsCollection = (function(_super) {
    __extends(ButtonsCollection, _super);

    function ButtonsCollection() {
      _ref1 = ButtonsCollection.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    ButtonsCollection.prototype.model = Entities.Button;

    return ButtonsCollection;

  })(Entities.Collection);
  API = {
    getFormButtons: function(buttons, model) {
      var array, buttonCollection;
      buttons = this.getDefaultButtons(buttons, model);
      array = [];
      if (buttons.cancel !== false) {
        array.push({
          type: "cancel",
          className: "button small secondary radius",
          text: buttons.cancel
        });
      }
      if (buttons.primary !== false) {
        array.push({
          type: "primary",
          className: "button small radius",
          text: buttons.primary,
          buttonType: "submit"
        });
      }
      if (buttons.placement === "left") {
        array.reverse();
      }
      buttonCollection = new Entities.ButtonsCollection(array);
      buttonCollection.placement = buttons.placement;
      return buttonCollection;
    },
    getDefaultButtons: function(buttons, model) {
      return _.defaults(buttons, {
        primary: model.isNew() ? "Create" : "Update",
        cancel: "Cancel",
        placement: "right"
      });
    }
  };
  return App.reqres.setHandler("form:button:entities", function(buttons, model) {
    if (buttons == null) {
      buttons = {};
    }
    return API.getFormButtons(buttons, model);
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __slice = [].slice;

this.Wrmldoc.module("Controllers", function(Controllers, App, Backbone, Marionette, $, _) {
  return Controllers.Base = (function(_super) {
    __extends(Base, _super);

    function Base(options) {
      if (options == null) {
        options = {};
      }
      this.region = options.region || App.request("default:region");
      Base.__super__.constructor.call(this, options);
      this._instance_id = _.uniqueId("controller");
      App.execute("register:instance", this, this._instance_id);
    }

    Base.prototype.close = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      delete this.region;
      delete this.options;
      Base.__super__.close.call(this, args);
      return App.execute("unregister:instance", this, this._instance_id);
    };

    Base.prototype.show = function(view) {
      this.listenTo(view, "close", this.close);
      return this.region.show(view);
    };

    return Base;

  })(Marionette.Controller);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Components.Form", function(Form, App, Backbone, Marionette, $, _) {
  var _ref;
  Form.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function(options) {
      if (options == null) {
        options = {};
      }
      this.contentView = wrmlData.view;
      this.formLayout = this.getFormLayout(wrmlData.config);
      this.listenTo(this.formLayout, "show", this.formContentRegion);
      this.listenTo(this.formLayout, "form:submit", this.formSubmit);
      return this.listenTo(this.formLayout, "form:cancel", this.formCancel);
    };

    Controller.prototype.formCancel = function() {
      return this.contentView.triggerMethod("form:cancel");
    };

    Controller.prototype.formSubmit = function() {
      var collection, data, model;
      data = Backbone.Syphon.serialize(this.formLayout);
      if (this.contentView.triggerMethod("form:submit", data) !== false) {
        model = this.contentView.model;
        collection = this.contentView.collection;
        return this.processFormSubmit(data, model, collection);
      }
    };

    Controller.prototype.processFormSubmit = function(data, model, collection) {
      return model.save(data, {
        collection: collection
      });
    };

    Controller.prototype.onClose = function() {
      return console.log("onClose", this);
    };

    Controller.prototype.formContentRegion = function() {
      this.region = this.formLayout.formContentRegion;
      return this.show(this.contentView);
    };

    Controller.prototype.getFormLayout = function(options) {
      var buttons, config;
      if (options == null) {
        options = {};
      }
      config = this.getDefaultConfig(_.result(this.contentView, "form"));
      _.extend(config, options);
      buttons = this.getButtons(config.buttons);
      return new Form.FormWrapper({
        config: config,
        model: this.contentView.model,
        buttons: buttons
      });
    };

    Controller.prototype.getDefaultConfig = function(config) {
      if (config == null) {
        config = {};
      }
      return _.defaults(config, {
        footer: true,
        focusFirstInput: true,
        errors: true,
        syncing: true
      });
    };

    Controller.prototype.getButtons = function(buttons) {
      if (buttons == null) {
        buttons = {};
      }
      if (buttons !== false) {
        return App.request("form:button:entities", buttons, this.contentView.model);
      }
    };

    return Controller;

  })(App.Controllers.Base);
  return App.reqres.setHandler("form:wrapper", function(contentView, options) {
    var formController;
    if (options == null) {
      options = {};
    }
    if (!contentView.model) {
      throw new Error("No model found inside of form's contentView");
    }
    formController = new Form.Controller({
      view: contentView,
      config: options
    });
    return formController.formLayout;
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("Components.Form", function(Form, App, Backbone, Marionette, $, _) {
  var _ref;
  return Form.FormWrapper = (function(_super) {
    __extends(FormWrapper, _super);

    function FormWrapper() {
      _ref = FormWrapper.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    FormWrapper.prototype.template = "form/form";

    FormWrapper.prototype.tagName = "form";

    FormWrapper.prototype.attributes = function() {
      return {
        "data-type": this.getFormDataType()
      };
    };

    FormWrapper.prototype.regions = {
      formContentRegion: "#form-content-region"
    };

    FormWrapper.prototype.ui = {
      buttonContainer: "ul.inline-list"
    };

    FormWrapper.prototype.triggers = {
      "submit": "form:submit",
      "click [data-form-button='cancel']": "form:cancel"
    };

    FormWrapper.prototype.modelEvents = {
      "change:_errors": "changeErrors",
      "sync:start": "syncStart",
      "sync:stop": "syncStop"
    };

    FormWrapper.prototype.initialize = function() {
      return this.setInstancePropertiesFor("config", "buttons");
    };

    FormWrapper.prototype.serializeData = function() {
      var _ref1, _ref2;
      return {
        footer: this.config.footer,
        buttons: (_ref1 = (_ref2 = this.buttons) != null ? _ref2.toJSON() : void 0) != null ? _ref1 : false
      };
    };

    FormWrapper.prototype.onShow = function() {
      var _this = this;
      return _.defer(function() {
        if (_this.config.focusFirstInput) {
          _this.focusFirstInput();
        }
        if (_this.buttons) {
          return _this.buttonPlacement();
        }
      });
    };

    FormWrapper.prototype.buttonPlacement = function() {
      return this.ui.buttonContainer.addClass(this.buttons.placement);
    };

    FormWrapper.prototype.focusFirstInput = function() {
      return this.$(":input:visible:enabled:first").focus();
    };

    FormWrapper.prototype.getFormDataType = function() {
      if (this.model.isNew()) {
        return "new";
      } else {
        return "edit";
      }
    };

    FormWrapper.prototype.changeErrors = function(model, errors, options) {
      if (this.config.errors) {
        if (_.isEmpty(errors)) {
          return this.removeErrors();
        } else {
          return this.addErrors(errors);
        }
      }
    };

    FormWrapper.prototype.removeErrors = function() {
      return this.$(".error").removeClass("error").find("small").remove();
    };

    FormWrapper.prototype.addErrors = function(errors) {
      var array, name, _results;
      if (errors == null) {
        errors = {};
      }
      _results = [];
      for (name in errors) {
        array = errors[name];
        _results.push(this.addError(name, array[0]));
      }
      return _results;
    };

    FormWrapper.prototype.addError = function(name, error) {
      var el, sm;
      el = this.$("[name='" + name + "']");
      sm = $("<small>").text(error);
      return el.after(sm).closest(".row").addClass("error");
    };

    FormWrapper.prototype.syncStart = function(model) {
      if (this.config.syncing) {
        return this.addOpacityWrapper();
      }
    };

    FormWrapper.prototype.syncStop = function(model) {
      if (this.config.syncing) {
        return this.addOpacityWrapper(false);
      }
    };

    return FormWrapper;

  })(App.Views.Layout);
});
(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["components/form/templates/form"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        var button, _i, _len, _ref;
      
        __out.push('<div class="panel radius">\n\t<div id="form-content-region"></div>\n\t');
      
        if (this.footer) {
          __out.push('\n\t\t<footer>\n\t\t\t');
          if (this.buttons) {
            __out.push('\n\t\t\t\t<ul class="inline-list">\n\t\t\t\t\t');
            _ref = this.buttons;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              button = _ref[_i];
              __out.push('\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button type="');
              __out.push(__sanitize(button.buttonType));
              __out.push('" data-form-button="');
              __out.push(__sanitize(button.type));
              __out.push('" class="');
              __out.push(__sanitize(button.className));
              __out.push('">');
              __out.push(__sanitize(button.text));
              __out.push('</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t');
            }
            __out.push('\n\t\t\t\t</ul>\n\t\t\t');
          }
          __out.push('\n\t\t</footer>\n\t');
        }
      
        __out.push('\n</div>');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);
// Generated by CoffeeScript 1.6.3
this.Wrmldoc.module("FooterApp", function(FooterApp, App, Backbone, Marionette, $, _) {
  var API;
  this.startWithParent = false;
  API = {
    show: function() {
      return new FooterApp.Show.Controller({
        region: App.footerRegion
      });
    }
  };
  return FooterApp.on("start", function() {
    return API.show();
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("FooterApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function() {
      var showView;
      showView = this.createShowView();
      return this.show(showView);
    };

    Controller.prototype.createShowView = function() {
      return new Show.Footer;
    };

    return Controller;

  })(App.Controllers.Base);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("FooterApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Footer = (function(_super) {
    __extends(Footer, _super);

    function Footer() {
      _ref = Footer.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Footer.prototype.template = "footer/show/footer";

    return Footer;

  })(App.Views.ItemView);
});
(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["apps/footer/show/templates/footer"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        __out.push('<div class="container">\t\t\t\n\tWRML - Web Resource Modeling Language</br>\t\n\tCopyright (C) 2011 - 2013 Mark Masse <mark@wrml.org> (OSS project <a href="http://www.wrml.org">WRML.org</a>).</br>\t\t\t\t\n\tLicensed under the <a href="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('LICENSE-2.0.txt">Apache License, Version 2.0</a>.\n</div>');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);
// Generated by CoffeeScript 1.6.3
this.Wrmldoc.module("HeaderApp", function(HeaderApp, App, Backbone, Marionette, $, _) {
  var API;
  this.startWithParent = false;
  API = {
    show: function() {
      return new HeaderApp.Show.Controller({
        region: App.headerRegion
      });
    }
  };
  return HeaderApp.on("start", function() {
    return API.show();
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("HeaderApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function() {
      var showView;
      showView = this.createShowView();
      return this.show(showView);
    };

    Controller.prototype.createShowView = function() {
      return new Show.Header;
    };

    return Controller;

  })(App.Controllers.Base);
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("HeaderApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Header = (function(_super) {
    __extends(Header, _super);

    function Header() {
      _ref = Header.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Header.prototype.template = "header/show/header";

    return Header;

  })(App.Views.ItemView);
});
(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["apps/header/show/templates/header"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        __out.push('<div id="header" class="navbar navbar-fixed-top navbar-inverse">\n\t<div class="navbar-inner">\n\t\t<div class="container">\n\n\t\t\t<div class="row">\n\t\t\t\t<div class="pull-left">\n\t\t\t\t\t<span class="brand">\n\t\t\t\t\t\t<!-- <img id="logo" src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/logo.png" /> -->\n\t\t\t\t\t\tWRML\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<ul class="nav pull-right">\n\n\t\t\t\t\t<li class="dropdown">\n\t\t\t\t\t\t<a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\tUser\n\t\t\t\t\t\t\t<b class="caret"></b>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Log In</a></li>\n\t\t\t\t\t\t\t<li class="divider"></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Preferences</a></li>\n\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class="dropdown">\n\t\t\t\t\t\t<a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\tModel\n\t\t\t\t\t\t\t<b class="caret"></b>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">New</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Open</a></li>\n\t\t\t\t\t\t\t<li class="divider"></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Save</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Save As</a></li>\n\t\t\t\t\t\t\t<li class="divider"></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Bookmark</a></li>\n\t\t\t\t\t\t\t<li class="divider"></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#"><!-- <img src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/store-small.png" /> -->Delete</a></li>\t\t\t\t\t  \n\t\t\t\t\t\t\t<!-- <li class="divider"></li> -->\n\t\t\t\t\t\t\t<!-- <li><a tabindex="-1" href="#">Separated link</a></li> -->\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class="dropdown">\n\t\t\t\t\t\t<a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t<b class="caret"></b>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Cut</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Copy</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">Paste</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class="dropdown">\n\t\t\t\t\t\t<a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\tView\n\t\t\t\t\t\t\t<b class="caret"></b>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a  tabindex="-1" href="#">Format <span class="badge badge-inverse">&gt;</span></a>\n\n\t\t\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\t\t\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">&bull; HTML</a></li>\t\t\t\t\t\t  \t\n\t\t\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">&ensp; JSON</a></li>\n\t\t\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">&ensp; XML</a></li>\n\t\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li class="dropdown">\n\t\t\t\t\t\t<a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t\tHelp\n\t\t\t\t\t\t\t<b class="caret"></b>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">README</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">User Guide</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">WRML Wiki</a></li>\n\t\t\t\t\t\t\t<li><a tabindex="-1" href="#">WRML.org</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\n\t\t\t</div>\n\n\t\t</div>\n\t</div>\n</div>\n\n\n');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("ModelApp", function(ModelApp, App, Backbone, Marionette, $, _) {
  var API, _ref;
  this.startWithParent = false;
  ModelApp.Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      _ref = Router.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Router;

  })(Marionette.AppRouter);
  API = {
    show: function(wrmlData) {
      return new ModelApp.Show.Controller(wrmlData);
    }
  };
  return ModelApp.on("start", function(wrmlData) {
    return API.show(wrmlData);
  });
});
// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("ModelApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.initialize = function(wrmlData) {
      var showView;
      showView = this.createShowView(wrmlData);
      return this.show(showView);
    };

    Controller.prototype.createShowView = function(wrmlData) {
      return new Show.Model({
        model: wrmlData
      });
    };

    return Controller;

  })(App.Controllers.Base);
});

/*

	class Show.Controller extends App.Controllers.Base
		
		initialize: ->
			model = App.request "model:entities"
			
			App.execute "when:fetched", model, =>
			
				@layout = @getLayoutView model
				
				# @listenTo @layout, "close", @close
			
				@listenTo @layout, "show", =>
					@titleRegion()
					@panelRegion()
					@modelRegion model
			
				@show @layout
		
		titleRegion: ->
			titleView = @getTitleView()
			@layout.titleRegion.show titleView
		
		panelRegion: ->
			panelView = @getPanelView()
			
			@listenTo panelView, "new:model:button:clicked", =>
				@newRegion()
			
			@layout.panelRegion.show panelView
		
		newRegion: ->
			App.execute "new:model:member", @layout.newRegion
		
		modelRegion: (model) ->
			modelView = @getModelView model
			
			@listenTo modelView, "childview:model:member:clicked", (child, args) ->
				App.vent.trigger "model:member:clicked", args.model
			
			@listenTo modelView, "childview:model:delete:clicked", (child, args) ->
				model = args.model
				if confirm "Are you sure you want to delete #{model.get("name")}?" then model.destroy() else false
			
			@layout.modelRegion.show modelView
		
		getModelView: (model) ->
			
			modelView = 
				new List.Model
					collection: model

			window.modelView = modelView

			modelView
		
		getPanelView: ->
			new List.Panel
		
		getTitleView: ->
			wrmlData = App.request "wrml:data"

			new List.Title
				model: new App.Entities.Model wrmlData
		
		getLayoutView: (model) ->
			new List.Layout
				collection: model
*/

// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

this.Wrmldoc.module("ModelApp.Show", function(Show, App, Backbone, Marionette, $, _) {
  var _ref;
  return Show.Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      _ref = Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Model.prototype.template = "model/show/model_show";

    return Model;

  })(App.Views.ItemView);
});
(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["apps/model/show/templates/model_show"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        var element, elementSyntax, elementType, elementValue, i, inputDomId, keySlot, keySlotName, keySlotValue, link, linkHref, linkName, listElementDescriptor, modelElementSchema, modelElementTitle, modelElementTitleSlotName, slot, slotName, slotSyntax, slotType, slotValue, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
      
        __out.push('<section>\n\t\n\t<div id="model-page-header">\n\t  <h1>\n\n\t  \t<img id="title-icon" src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/model.png" />');
      
        __out.push(__sanitize(this.model.title));
      
        __out.push(' \n\n\t  \t<!-- \n\t  \t<span id="model-navigation">\n\n\t  \t\t<span class="model-navigation-item">\n\t\t  \t\t<span class="model-navigation-label">Schema</span> \n\t\t  \t\t<span class="model-navigation-menubutton">\n\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t  <a class="btn btn-inverse model-navigation-menubutton-title" href="#">');
      
        __out.push(__sanitize(this.schema.title));
      
        __out.push('</a>\n\t\t\t\t\t  <a class="btn btn-inverse dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>\n\t\t\t\t\t  <ul class="dropdown-menu">\n\t\t\t\t\t    <li><a href="#">Open</a></li>\n\t\t\t\t\t    <li><a href="#">Delete</a></li>\n\t\t\t\t\t    <li><a href="#"><i class="icon-ban-circle"></i> Ban</a></li>\n\t\t\t\t\t    <li class="divider"></li>\n\t\t\t\t\t    <li><a href="#"><i class="i"></i> Make admin</a></li>\n\t\t\t\t\t  </ul>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t</span>\n\n\t  \t\t<span class="model-navigation-item">\n\t\t  \t\t<span class="model-navigation-label">API</span> \n\t\t  \t\t<span class="model-navigation-menubutton">\n\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t  <a class="btn btn-inverse model-navigation-menubutton-title" href="#">');
      
        __out.push(__sanitize(this.api.title));
      
        __out.push('</a>\n\t\t\t\t\t  <a class="btn btn-inverse dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>\n\t\t\t\t\t  <ul class="dropdown-menu">\n\t\t\t\t\t    <li><a href="#"><i class="icon-pencil"></i> Edit</a></li>\n\t\t\t\t\t    <li><a href="#"><i class="icon-trash"></i> Delete</a></li>\n\t\t\t\t\t    <li><a href="#"><i class="icon-ban-circle"></i> Ban</a></li>\n\t\t\t\t\t    <li class="divider"></li>\n\t\t\t\t\t    <li><a href="#"><i class="i"></i> Make admin</a></li>\n\t\t\t\t\t  </ul>\n\t\t\t\t\t</div>\n\t\t\t  \t</span>\n\t\t\t</span>\n\n\t  \t</span>\n\t\t-->\n\n\t  </h1>\n\t</div>\n\n\t<div id="model-description" class="well">\n\t\t<p>\n\t\n\t\t');
      
        if (this.model.description) {
          __out.push('\t\t\n\t\t\t');
          __out.push(__sanitize(this.model.description));
          __out.push('\t\t\t\t\n\t\t');
        } else {
          __out.push('\t\t\n\t\t\t<i>No description provided.</i>\n\t\t');
        }
      
        __out.push('\t\n\n\t\t</p>\t\n\t</div>\n\n</section>\n\n\n');
      
        if (this.schema.keyCount > 0) {
          __out.push('\t\n');
          console.log("Key Count: " + this.schema.keyCount);
          __out.push('\t\n<div class="section-divider">\n  <span>\n    Key Properties\n  </span>\n</div>\n\n<section>\n\n\t<form>\n\t  \n\t');
          _ref = this.schema.keys;
          for (keySlotName in _ref) {
            keySlot = _ref[keySlotName];
            __out.push('\n\t\t\n\t\t');
            keySlotValue = this.model[keySlotName];
            __out.push('\n\t\t');
            console.log("Key - name: " + keySlotName + " value: " + keySlotValue);
            __out.push('\n\n\t\t<fieldset>\t\n\t\t\t<label class="form-field-label" for="');
            __out.push(__sanitize(keySlotName));
            __out.push('"><img class="form-field-label-icon" src="');
            __out.push(__sanitize(wrmlData.docroot));
            __out.push('img/type/');
            __out.push(__sanitize(keySlot.type));
            __out.push('.png" /> ');
            __out.push(__sanitize(keySlotName));
            __out.push('</label>\t\t\t\t\t\t\t\t\t\n\t\t\t<input type="text" id="');
            __out.push(__sanitize(keySlotName));
            __out.push('" value="');
            __out.push(__sanitize(keySlotValue));
            __out.push('" readonly="readonly">\n\t\t</fieldset>\n  \n\t');
          }
          __out.push('\n\t  \n\t</form>\n\n</section>\n\n\t');
          if (this.schema.slotCount > 0) {
            __out.push('\n\n<div class="section-divider">\n  <span>\n    Other Properties\n  </span>\n</div>\n\n\t');
          }
          __out.push('\n\n');
        } else if (this.schema.slotCount > 0) {
          __out.push('\t\n\n<div class="section-divider">\n  <span>\n    Properties\n  </span>\n</div>\n\n');
        }
      
        __out.push('\n\n');
      
        if (this.schema.slotCount > 0) {
          __out.push('\t\n<section>\n\n\t<form>\n\t\n\t');
          _ref1 = this.schema.slots;
          for (slotName in _ref1) {
            slot = _ref1[slotName];
            __out.push('\n\t\t\n\t\t');
            slotType = slot.type;
            __out.push('\n\t\t');
            slotValue = this.model[slotName];
            __out.push('\n\t\t');
            console.log("Slot - name: " + slotName + " type: " + slotType + " value: " + slotValue);
            __out.push('\n\n\t\t<fieldset>\t\n\t\t\t\t\t\t\t\n\t\t\t<label class="form-field-label" for="');
            __out.push(__sanitize(slotName));
            __out.push('"><img class="form-field-label-icon" src="');
            __out.push(__sanitize(wrmlData.docroot));
            __out.push('img/type/');
            __out.push(__sanitize(slotType));
            __out.push('.png" /> ');
            __out.push(__sanitize(slotName));
            __out.push('</label>\t\t\t\t\n\n\t\t\t');
            if (slotType === "Text") {
              __out.push(' \n\t\t\t\t\n\t\t\t\t');
              slotSyntax = slot != null ? (_ref2 = slot.syntax) != null ? _ref2.title : void 0 : void 0;
              __out.push('\n\n\t\t\t\t');
              if (slotSyntax === "URI") {
                __out.push(' \n\n\t\t\t\t<div class="input-append">\t\t\t\t\t\n\t\t\t\t\t<input type="url" id="');
                __out.push(__sanitize(slotName));
                __out.push('" value="');
                __out.push(__sanitize(slotValue));
                __out.push('">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t<button class="btn btn-success" type="button">GET</button>\n\t\t\t\t</div>\t\n\n\t\t\t\t');
              } else {
                __out.push('\n\t\t\t\t<input type="text" id="');
                __out.push(__sanitize(slotName));
                __out.push('" value="');
                __out.push(__sanitize(slotValue));
                __out.push('">\t\t\t\t\n\t\t\t\t');
              }
              __out.push('\n\n\t\t\t');
            } else if (slotType === "Boolean") {
              __out.push(' \n\n\t\t\t<select id="');
              __out.push(__sanitize(slotName));
              __out.push('">\n\t\t\t\t');
              if (slotValue) {
                __out.push('\n\t\t\t\t<option selected="selected">true</option>\n\t\t\t\t<option>false</option>\n\t\t\t\t');
              } else {
                __out.push('\n\t\t\t\t<option>true</option>\n\t\t\t\t<option selected="selected">false</option>\n\t\t\t\t');
              }
              __out.push('\n\t\t\t</select>\n\n\t\t\t');
            } else if (slotType === "Long" || slotType === "Integer") {
              __out.push(' \n\n\t\t\t<input type="number" id="');
              __out.push(__sanitize(slotName));
              __out.push('" value="');
              __out.push(__sanitize(slotValue));
              __out.push('">\n\n\t\t\t\n\t\t\t');
            } else if (slotType === "List") {
              __out.push(' \n\t\t\t\n\t\t\t');
              listElementDescriptor = slot.element;
              __out.push('\n\t\t\t');
              elementType = listElementDescriptor != null ? listElementDescriptor.type : void 0;
              __out.push('\n\t\t\t');
              elementSyntax = listElementDescriptor != null ? (_ref3 = listElementDescriptor.syntax) != null ? _ref3.title : void 0 : void 0;
              __out.push('\n\t\t\t');
              modelElementSchema = listElementDescriptor != null ? listElementDescriptor.schema : void 0;
              __out.push('\n\t\t\t');
              modelElementTitleSlotName = modelElementSchema != null ? modelElementSchema.titleSlotName : void 0;
              __out.push('\n\n\t\t\t<table class="table">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th class="list-index-header">Index</th>\n\t\t\t\t\t\t<th>Value</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t\n\t\t\t\t<tbody>\n\t\t\t\t');
              if (slotValue) {
                __out.push('\t\n\n\n\t\t\t\t\t');
                for (i = _i = 0, _len = slotValue.length; _i < _len; i = ++_i) {
                  element = slotValue[i];
                  __out.push('\n\t\t\t\t\t\n\t\t\t\t\t');
                  elementValue = slotValue[i];
                  __out.push('\n\t\t\t\t\t');
                  inputDomId = slotName + ("_" + i);
                  __out.push('\n\t                <tr>\n\t\t\t\t\t\t<td class="list-index-value"><img class="list-index-icon" src="');
                  __out.push(__sanitize(wrmlData.docroot));
                  __out.push('img/type/');
                  __out.push(__sanitize(elementType));
                  __out.push('.png" /> ');
                  __out.push(__sanitize(i));
                  __out.push('</td>\n\n\n\n\t\t\t\t\t\t<td class="list-element-value">\n\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t');
                  if (elementType === "Text") {
                    __out.push(' \n\t\t\t\t\n\t\t\t\t\t\t\t\t');
                    if (elementSyntax === "URI") {
                      __out.push(' \n\n\t\t\t\t\t\t\t\t<div class="input-append">\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input type="url" id="');
                      __out.push(__sanitize(inputDomId));
                      __out.push('" value="');
                      __out.push(__sanitize(elementValue));
                      __out.push('">\n\t\t\t\t\t\t\t\t\t<button class="btn btn-success" type="button">GET</button>\n\t\t\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t\t\t\t');
                    } else {
                      __out.push('\n\t\t\t\t\t\t\t\t<input type="text" id="');
                      __out.push(__sanitize(inputDomId));
                      __out.push('" value="');
                      __out.push(__sanitize(elementValue));
                      __out.push('">\t\t\t\t\n\t\t\t\t\t\t\t\t');
                    }
                    __out.push('\n\n\t\t\t\t\t\t\t');
                  } else if (elementType === "Boolean") {
                    __out.push(' \n\n\t\t\t\t\t\t\t<select id="');
                    __out.push(__sanitize(inputDomId));
                    __out.push('">\n\t\t\t\t\t\t\t\t');
                    if (elementValue) {
                      __out.push('\n\t\t\t\t\t\t\t\t<option selected="selected">true</option>\n\t\t\t\t\t\t\t\t<option>false</option>\n\t\t\t\t\t\t\t\t');
                    } else {
                      __out.push('\n\t\t\t\t\t\t\t\t<option>true</option>\n\t\t\t\t\t\t\t\t<option selected="selected">false</option>\n\t\t\t\t\t\t\t\t');
                    }
                    __out.push('\n\t\t\t\t\t\t\t</select>\n\n\n\t\t\t\t\t\t\t');
                  } else if (elementType === "Long" || elementType === "Integer") {
                    __out.push(' \n\t\t\t\t\t\t\t<input type="number" id="');
                    __out.push(__sanitize(inputDomId));
                    __out.push('" value="');
                    __out.push(__sanitize(elementValue));
                    __out.push('">\n\n\t\t\t\t\t\t\t');
                  } else if (elementType === "Model") {
                    __out.push(' \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
                    modelElementTitle = elementValue[modelElementTitleSlotName];
                    __out.push('\n\n\n\t\t\t\t\t\t\t<div class="input-append">\n\t\t\t\t\t\t\t\t<input type="text" id="');
                    __out.push(__sanitize(inputDomId));
                    __out.push('" value="');
                    __out.push(__sanitize(modelElementTitle));
                    __out.push('" readonly="readonly">\t\t\t\t\n\t\t\t\t  \t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t\t\t\t\t</div>\t\n\n\t\t\t\n\t\t\t\t\t\t\t');
                  }
                  __out.push('\n\n\t\t\t\t\t\t</td>\n\n\t                </tr>\n\t\t\t\t\t');
                }
                __out.push('\n\n\t\t\t\t');
              } else {
                __out.push('\n\t                <tr>\n\t                  <td colspan="2"><i>Empty</i></td>\t                  \n\t                </tr>\t\t\t\t\n\t\t\t\t');
              }
              __out.push('\n\n            \t</tbody>\n\n            </table>\n\n\n\t\t\t');
            } else if (slotType === "Model") {
              __out.push(' \n\n\t\t\t<div class="input-append">\n\t\t\t\t<input type="text" id="');
              __out.push(__sanitize(slotName));
              __out.push('" value="TODO: ');
              __out.push(__sanitize(slotValue));
              __out.push('" readonly="readonly">\t\t\t\t\n  \t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t</div>\t\n\n\t\t\t');
            }
            __out.push('   \n\n\n\t\t</fieldset>\n\n\t');
          }
          __out.push('\n\n\t</form>\n\n</section>\n\n');
        }
      
        __out.push('\t\n\n');
      
        if (this.schema.linkCount > 0) {
          __out.push('\t\n\n<div class="section-divider">\n  <span>\n    Links\n  </span>\n</div>\n\n<section>\n\n\t\t');
          _ref4 = this.schema.links;
          for (linkName in _ref4) {
            link = _ref4[linkName];
            __out.push('\n\t\t');
            linkHref = (_ref5 = this.model[linkName]) != null ? _ref5.href : void 0;
            __out.push('\n\n\t\t');
            console.log("Link - name: " + linkName + " rel: " + link.rel);
            __out.push('\n\n\n\t\t<form class="form-horizontal">\n\n\t\t\t<fieldset>\t\t\t\n\t\t\n\t\t\t\t<label class="form-field-label" for="');
            __out.push(__sanitize(linkName));
            __out.push('_href"><img class="form-field-label-icon" src="');
            __out.push(__sanitize(wrmlData.docroot));
            __out.push('img/type/Link.png" /> ');
            __out.push(__sanitize(linkName));
            __out.push('</label>\t\t\n\t  \n\t\t\t\t<div class="control-group">\n\t\t\t\t\t\n\t\t\t\t\t<label class="control-label" for="');
            __out.push(__sanitize(linkName));
            __out.push('_href">href</label>\n\t\t\t\t\t\n\t\t\t\t\t<div class="controls">\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class="input-append">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<input type="url" id="');
            __out.push(__sanitize(linkName));
            __out.push('_href" value="');
            __out.push(__sanitize(linkHref));
            __out.push('" readonly="readonly">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            if (link.method === "GET") {
              __out.push('\t\n\t\t\t\t\t\t\t<button class="btn btn-success" type="button">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            } else if (link.method === "PUT") {
              __out.push('\t\n\t\t\t\t\t\t\t<button class="btn btn-warning" type="button">\n  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            } else if (link.method === "POST") {
              __out.push('\t\n\t\t\t\t\t\t\t<button class="btn btn-warning" type="button">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            } else if (link.method === "DELETE") {
              __out.push('\t\n\t\t\t\t\t\t\t<button class="btn btn-danger" type="button">\n  \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            }
            __out.push('\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t');
            __out.push(__sanitize(link.method));
            __out.push('</button>\n\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class="control-group">\n\t\t\t\t\t\n\t\t\t\t\t<label class="control-label" for="');
            __out.push(__sanitize(linkName));
            __out.push('_rel">rel</label>\n\n\t\t\t\t\t<div class="controls">\t\t\t\t\t\t\n\t\t\t\t\t\t<div class="input-append">\n\t\t\t\t\t\t\t<input type="url" id="');
            __out.push(__sanitize(linkName));
            __out.push('_rel" value="');
            __out.push(__sanitize(link.rel));
            __out.push('" readonly="readonly">\t\t\t\t\t\t\t\t\t\t\t\t\t\n  \t\t\t\t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t</div>\t\n\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\n\t\t</form>\t\t\n\n\t\t');
          }
          __out.push('\n\n\n\t\n</section>\n\n');
        }
      
        __out.push('\t\n\n<div class="section-divider">\n  <span>\n    Metadata\n  </span>\n</div>\n\n<section>\n\n\n\n\t<form>\n\t\n\t\t<fieldset>\t\n\t\t\t\t\t\t\t\n\t\t\t<label class="form-field-label" for="schema"><img class="form-field-label-icon" src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/schema.png" /> Schema</label>\t\n\t\t\t<div class="input-append">\n  \t\t\t\t<input type="text" id="schema" value="');
      
        __out.push(__sanitize(this.schema.title));
      
        __out.push(' - ');
      
        __out.push(__sanitize(this.schema.uri));
      
        __out.push('" readonly="readonly">\t\t\t\t\n  \t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\n\t\t</fieldset>\n\n\t</form>\n\n\t<form>\n\n\t\t<fieldset>\t\n\t\t\t\t\t\t\t\n\t\t\t<label class="form-field-label" for="api"><img class="form-field-label-icon" src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/api.png" /> API</label>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t<div class="input-append">\n\t\t\t\t<input type="text" id="api" value="');
      
        __out.push(__sanitize(this.api.title));
      
        __out.push(' - ');
      
        __out.push(__sanitize(this.api.uri));
      
        __out.push('" readonly="readonly">\t\t\t\t\n  \t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t</fieldset>\n\n\t</form>\n\n\t<form class="form-horizontal">\n\t\t<fieldset>\t\n\t\t\t\t\t\t\t\n\t\t\t<label class="form-field-label" for="uriTemplate"><img class="form-field-label-icon" src="');
      
        __out.push(__sanitize(wrmlData.docroot));
      
        __out.push('img/resource.png" /> Resource</label>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t<div class="input-append">\n\t\t\t\t<input type="url" id="uriTemplate" value="');
      
        __out.push(__sanitize(this.api.resource.uriTemplate));
      
        __out.push('" readonly="readonly">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\n  \t\t\t\t<button class="btn btn-inverse" type="button">Open</button>\n\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\n\t\t</fieldset>\n\t</form>\t\t\n\n</section>\n\n');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);
